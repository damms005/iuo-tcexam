{"remainingRequest":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/src/App.vue","mtime":1550052702997},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Uploader from './components/Uploader.vue';\nimport loremIpsum from 'lorem-ipsum';\nimport Swal from 'sweetalert2';\nexport default {\n  components: {\n    Uploader: Uploader\n  },\n  data: function data() {\n    return {\n      files: [],\n      accept: 'image/png,image/gif,image/jpeg,image/pdf,doc/pdf',\n      extensions: 'gif,jpg,jpeg,png,webp,pdf',\n      // extensions: ['gif', 'jpg', 'jpeg','png', 'webp'],\n      // extensions: /\\.(gif|jpe?g|png|webp)$/i,\n      minSize: 1024,\n      size: 1024 * 1024 * 10,\n      multiple: true,\n      directory: false,\n      drop: true,\n      dropDirectory: true,\n      addIndex: false,\n      thread: 3,\n      name: 'file',\n      postAction: '/upload/post',\n      // putAction: '/upload/put',\n      headers: {\n        'X-Csrf-Token': 'xxxx'\n      },\n      data: {\n        '_csrf_token': 'xxxxxx'\n      },\n      autoCompress: 1024 * 1024,\n      uploadAuto: false,\n      isOption: false,\n      addData: {\n        show: false,\n        name: '',\n        type: '',\n        content: ''\n      },\n      editFile: {\n        show: false,\n        name: ''\n      },\n      status: \"...\",\n\n      /******** C O N D I T I O N A L    D I S P L A Y S ********/\n      showStartUpoadButton: true,\n      showStartAllOver: true,\n      showProgressHolder: false,\n      showQuotes: false,\n      showStopUpoadButton: true,\n      serverStatusText: '',\n      startMarking: false,\n      startMimickingServerSentStatus: false,\n      mimickeryIntervalReference: null,\n\n      /******** C S S    C L A S S E S ********/\n      //1. main grey background at default\n      //note that some of the classes are not necessarily for css rules, but simply markers that \n      //are helpful for dom inspection @debugging, so we know which css class is swapped in at any partuclar time\n      current_bottom_main_grey_background_class: \"\",\n      bottom_main_grey_background_class: {\n        \"-bottom_main_grey_background_class bg-grey-light pin-b absolute h-0 opacity-0 w-full flex justify-center\": true\n      },\n      bottom_main_grey_background_class_slide_up: {\n        \"-bottom_main_grey_background_class_slide_up bg-grey-light p-2 pin-b absolute h-24 w-full flex justify-center\": true\n      },\n      //2. main grey background at start marking\n      bottom_main_grey_background_class_start_marking_class: {\n        \"-bottom_main_grey_background_class_start_marking_class bg-grey-light p-2 pin-b absolute h-full w-full flex justify-center\": true\n      },\n      //bottom green at default      \n      current_bottom_green_background_class: \"\",\n      bottom_green_background_class: {\n        \"-bottom_green_background_class border rounded p-4 bg-green-lightest flex w-5/6\": true\n      },\n      //bottom green at start marking\n      bottom_green_background_start_uploading_class: {\n        \"-bottom_green_background_start_uploading_class animateAll relative h-full justify-left border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n      //bottom green at start marking\n      bottom_green_background_class_start_marking_class: {\n        \"-bottom_green_background_class_start_marking_class animateAll relative h-full justify-center border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n      //progress holder at default\n      current_main_holdin_container_class: \"\",\n      main_holdin_container_class: {\n        \"-main_holdin_container_class rounded self-center text-grey-dark relative overflow-hidden w-auto ml-16 p-2 h-34\": true\n      },\n      //progress holder at start marking\n      main_holdin_container_start_marking_class: {\n        \"-main_holdin_container_start_marking_class rounded self-center text-grey-dark relative overflow-hidden w-full p-2 h-full\": true\n      },\n      //main holding container at default\n      current_progress_control_container_class: \"\",\n      progress_control_container_class: {\n        \"-ml-2 mt-6 w-full h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n      progress_control_container_start_marking_class: {\n        \"-ml-2 mt-6 w-32 h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n      //progress text at default\n      current_progress_text_class: \"\",\n      progress_text_class: {// \"btn\" : true\n      },\n      progress_text_start_marking_class: {\n        \"-progress_text_start_marking_class serverStatusText flex justify-center text-center inline-block self-center w-full h-10 asolute overflow-hidden\": true\n      },\n      current_spanprogresstext_class: \"\",\n      spanprogresstext_class: {\n        \"-spanprogresstext_class inline-block self-center relatvie tracking-wide text-xs p-2 font-bold text-blue-darker border rounded\": true\n      },\n      spanprogresstext_start_marking_class: {\n        \"-spanprogresstext_start_marking_class inline-block self-center relatvie tracking-wide text-xs bg-red-light p-2 font-bold text-white rounded\": true\n        /******** C S S    C L A S S E S ********/\n\n      }\n    };\n  },\n  watch: {\n    'addData.show': function addDataShow(show) {\n      if (show) {\n        this.addData.name = '';\n        this.addData.type = '';\n        this.addData.content = '';\n      }\n    }\n  },\n  created: function created() {\n    this.current_main_holdin_container_class = this.main_holdin_container_class;\n    this.current_progress_control_container_class = this.progress_control_container_class;\n    this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n    this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n    this.current_progress_text_class = this.progress_text_class;\n    this.current_spanprogresstext_class = this.spanprogresstext_class;\n  },\n  methods: {\n    updateServerStatus: function updateServerStatus(message) {\n      this.serverStatusText = message;\n    },\n    alert: function alert(message) {\n      var alert_type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n      var title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Information';\n      // alert2({message})\n      var types = ['warning', 'error', 'success', 'info', 'question'];\n      Swal.fire(title, String(message), alert_type > types.length ? 0 : types[alert_type]);\n    },\n    change_status: function change_status(event) {\n      this.status = event.target.parentElement.innerText.trim();\n\n      switch (this.status) {\n        case 'All Uploads Successful':\n          //slide up botom panel to main focus\n          //show progresscircle\n          //write stuff to status update\n          this.showProgressHolder = true;\n          this.serverStatusText = \"All uploads successful\"; //to trigger display of greenworkingbackground\n\n          this.$refs.uploader.showLoadingMode = true;\n          this.showQuotes = true; //buttons\n\n          this.showStartUpoadButton = false;\n          this.showStartAllOver = false;\n          this.showStopUpoadButton = false;\n          this.current_main_holdin_container_class = this.main_holdin_container_start_marking_class;\n          this.current_progress_text_class = this.progress_text_start_marking_class;\n          this.current_spanprogresstext_class = this.spanprogresstext_start_marking_class;\n          this.$refs.uploader.displayLoadingImage = false;\n          this.current_bottom_green_background_class = this.bottom_green_background_class_start_marking_class;\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_start_marking_class;\n          break;\n\n        case 'Show error':\n          this.alert(\"An error occured\", null, \"Oops!\"); //slide up botom panel to main focus\n          //show progresscircle\n          //write stuff to status update\n\n          this.showProgressHolder = false;\n          this.serverStatusText = \"An error occured\"; //to trigger display of greenworkingbackground\n          //buttons\n\n          this.showStartUpoadButton = true;\n          this.showStartAllOver = true;\n          this.showStopUpoadButton = false;\n          this.$refs.uploader.displayLoadingImage = false;\n          this.showQuotes = false;\n          this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n          break;\n\n        case 'Marking completed successfully':\n          this.$refs.uploader.showLoadingMode = false;\n          this.$refs.uploader.showFinalStatus = true;\n          this.showQuotes = false;\n          break;\n\n        case 'Start All Over':\n          break;\n      }\n    },\n    files_change: function files_change(_files) {\n      if (_files.length > 0) {\n        this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n      } else {\n        this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n      }\n    },\n    toggleGeneratingLoremIpsum: function toggleGeneratingLoremIpsum() {\n      this.startMimickingServerSentStatus = !this.startMimickingServerSentStatus;\n\n      if (this.startMimickingServerSentStatus) {\n        var vue_instance = this;\n        this.mimickeryIntervalReference = setInterval(function () {\n          vue_instance.serverStatusText = loremIpsum({\n            count: 1 // Number of words, sentences, or paragraphs to generate.\n            ,\n            units: 'sentences' // Generate words, sentences, or paragraphs.\n            ,\n            sentenceLowerBound: 2 // Minimum words per sentence.\n            ,\n            sentenceUpperBound: (Math.random() + 0.1) * 10 + 2 // Maximum words per sentence.\n            ,\n            format: 'plain' // Plain text or html\n\n          });\n        }, 2000);\n        console.log(vue_instance.serverStatusText);\n      } else {\n        //clear any existing interval\n        if (this.mimickeryIntervalReference) {\n          clearInterval(this.mimickeryIntervalReference);\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"flex relative\">\n    <!-- — - --  -->\n    <div class=\"w-5/6\">\n          <div class=\"bg-grey-lightest rounded fixed w-4/5 pin-y overflow-visible m-5 border\">\n            <uploader v-if=\"1\"\n              @files_change=\"files_change\"\n              @serverStatusText=\" updateServerStatus \"\n              class=\"bg-grey-lightest\"\n              ref=\"uploader\"\n              :showStartUpoadButton=\"showStartUpoadButton\"\n              :showStartAllOver=\"showStartAllOver\"\n              :showStopUpoadButton=\"showStopUpoadButton\"\n              :serverStatusText=\"serverStatusText\"\n              :startMarking=\"startMarking\"\n              :main_holdin_container=\"current_main_holdin_container_class\"\n              :showProgressHolder=\"showProgressHolder\"\n              :showQuotes=\"showQuotes\"\n              :current_bottom_main_grey_background_class=\"current_bottom_main_grey_background_class\"\n              :current_bottom_green_background_class=\"current_bottom_green_background_class\"\n              :current_progress_control_container_class=\"current_progress_control_container_class\"\n              :current_progress_text_class=\"current_progress_text_class\"\n              :current_spanprogresstext_class=\"current_spanprogresstext_class\"\n            ></uploader>\n          </div>\n    </div>\n\n    <div class=\"bg-green-lightest rounded absolute w-1/6 pin-r m-5 min-h-full p-2 border text-xs\">\n      <label class=\"block cursor-pointer p-1 mt-1 \">All Uploads Successful<input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\"> </label>\n      <label class=\"block cursor-pointer p-1 mt-1 \">Show error<input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\"> </label>\n      <label class=\"block cursor-pointer p-1 mt-1 \">Marking completed successfully<input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\"> </label>\n      <label class=\"block cursor-pointer p-1 mt-1 \">Start All Over<input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\"> </label>\n\n      <label class=\"block cursor-pointer p-1 mt-1 \">\n        Mimick server processing files status messages <input type=\"checkbox\" @click=\"toggleGeneratingLoremIpsum\">\n      </label>\n\n      <div class=\"p-1 m-1 mt-12 border rounded bg-black text-white\" v-html=\"status\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n  import Uploader from './components/Uploader.vue'\n  import loremIpsum from 'lorem-ipsum'\n  import Swal from 'sweetalert2'\n\n  export default {\n    components: {\n      Uploader\n    },\n    data() {\n      return {\n        files: [],\n        accept: 'image/png,image/gif,image/jpeg,image/pdf,doc/pdf',\n        extensions: 'gif,jpg,jpeg,png,webp,pdf',\n        // extensions: ['gif', 'jpg', 'jpeg','png', 'webp'],\n        // extensions: /\\.(gif|jpe?g|png|webp)$/i,\n        minSize: 1024,\n        size: 1024 * 1024 * 10,\n        multiple: true,\n        directory: false,\n        drop: true,\n        dropDirectory: true,\n        addIndex: false,\n        thread: 3,\n        name: 'file',\n        postAction: '/upload/post',\n        // putAction: '/upload/put',\n        headers: {\n          'X-Csrf-Token': 'xxxx',\n        },\n        data: {\n          '_csrf_token': 'xxxxxx',\n        },\n        autoCompress: 1024 * 1024,\n        uploadAuto: false,\n        isOption: false,\n        addData: {\n          show: false,\n          name: '',\n          type: '',\n          content: '',\n        },\n        editFile: {\n          show: false,\n          name: '',\n        },\n        status: \"...\",\n\n\n      /******** C O N D I T I O N A L    D I S P L A Y S ********/\n\n        showStartUpoadButton: true,\n        showStartAllOver: true,\n        showProgressHolder: false,\n        showQuotes: false,\n        showStopUpoadButton: true,\n        serverStatusText: '',\n        startMarking: false,\n        startMimickingServerSentStatus: false,\n        mimickeryIntervalReference: null,\n\n\n      /******** C S S    C L A S S E S ********/\n\n      //1. main grey background at default\n      //note that some of the classes are not necessarily for css rules, but simply markers that \n      //are helpful for dom inspection @debugging, so we know which css class is swapped in at any partuclar time\n      current_bottom_main_grey_background_class: \"\",\n      bottom_main_grey_background_class: {\n        \"-bottom_main_grey_background_class bg-grey-light pin-b absolute h-0 opacity-0 w-full flex justify-center\": true\n      },\n      bottom_main_grey_background_class_slide_up: {\n        \"-bottom_main_grey_background_class_slide_up bg-grey-light p-2 pin-b absolute h-24 w-full flex justify-center\": true\n      },\n      //2. main grey background at start marking\n      bottom_main_grey_background_class_start_marking_class: {\n        \"-bottom_main_grey_background_class_start_marking_class bg-grey-light p-2 pin-b absolute h-full w-full flex justify-center\": true\n      },\n\n\n      //bottom green at default      \n      current_bottom_green_background_class: \"\",\n      bottom_green_background_class: {\n        \"-bottom_green_background_class border rounded p-4 bg-green-lightest flex w-5/6\": true\n      },\n      //bottom green at start marking\n      bottom_green_background_start_uploading_class: {\n        \"-bottom_green_background_start_uploading_class animateAll relative h-full justify-left border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n      //bottom green at start marking\n      bottom_green_background_class_start_marking_class: {\n        \"-bottom_green_background_class_start_marking_class animateAll relative h-full justify-center border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n\n\n      //progress holder at default\n      current_main_holdin_container_class: \"\",\n      main_holdin_container_class: {\n        \"-main_holdin_container_class rounded self-center text-grey-dark relative overflow-hidden w-auto ml-16 p-2 h-34\": true\n      },\n      //progress holder at start marking\n      main_holdin_container_start_marking_class: {\n        \"-main_holdin_container_start_marking_class rounded self-center text-grey-dark relative overflow-hidden w-full p-2 h-full\": true\n      },\n\n\n      //main holding container at default\n      current_progress_control_container_class: \"\",\n      progress_control_container_class: {\n        \"-ml-2 mt-6 w-full h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n      progress_control_container_start_marking_class: {\n        \"-ml-2 mt-6 w-32 h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n\n\n      //progress text at default\n      current_progress_text_class: \"\",\n      progress_text_class: {\n        // \"btn\" : true\n      },\n      progress_text_start_marking_class: {\n        \"-progress_text_start_marking_class serverStatusText flex justify-center text-center inline-block self-center w-full h-10 asolute overflow-hidden\": true\n      },\n\n      current_spanprogresstext_class: \"\",\n      spanprogresstext_class: {\n        \"-spanprogresstext_class inline-block self-center relatvie tracking-wide text-xs p-2 font-bold text-blue-darker border rounded\": true\n      },\n      spanprogresstext_start_marking_class: {\n        \"-spanprogresstext_start_marking_class inline-block self-center relatvie tracking-wide text-xs bg-red-light p-2 font-bold text-white rounded\": true\n      }\n\n      /******** C S S    C L A S S E S ********/\n\n\n      }\n    },\n    watch: {\n      'addData.show'(show) {\n        if (show) {\n          this.addData.name = ''\n          this.addData.type = ''\n          this.addData.content = ''\n        }\n      }\n    },\n    created:function(){\n      this.current_main_holdin_container_class = this.main_holdin_container_class;\n      this.current_progress_control_container_class = this.progress_control_container_class;\n      this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n      this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n      this.current_progress_text_class = this.progress_text_class;\n      this.current_spanprogresstext_class = this.spanprogresstext_class;\n    },\n    methods: {\n      updateServerStatus:function( message ){\n        this.serverStatusText = message;\n      },\n      alert( message , alert_type = 3 , title = 'Information' ) {\n        // alert2({message})\n        let types = ['warning', 'error', 'success', 'info', 'question'];\n        Swal.fire(\n          title,\n          String(message),\n          ( alert_type > types.length ? 0 : types[alert_type] )\n        )\n      },\n      change_status:function(event){\n\n        this.status = event.target.parentElement.innerText.trim();\n\n        switch(this.status){\n\n          case 'All Uploads Successful':\n            //slide up botom panel to main focus\n            //show progresscircle\n            //write stuff to status update\n            this.showProgressHolder = true;\n            this.serverStatusText = \"All uploads successful\";//to trigger display of greenworkingbackground\n\n            this.$refs.uploader.showLoadingMode = true;\n            this.showQuotes = true;\n\n            //buttons\n            this.showStartUpoadButton = false;\n            this.showStartAllOver = false;\n            this.showStopUpoadButton = false;\n\n            this.current_main_holdin_container_class = this.main_holdin_container_start_marking_class;\n            this.current_progress_text_class = this.progress_text_start_marking_class;\n            this.current_spanprogresstext_class = this.spanprogresstext_start_marking_class;\n\n            this.$refs.uploader.displayLoadingImage = false;\n            this.current_bottom_green_background_class = this.bottom_green_background_class_start_marking_class;\n            this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_start_marking_class;\n          break;\n\n          case 'Show error':\n\n            this.alert(\"An error occured\",null,\"Oops!\");\n\n                        //slide up botom panel to main focus\n            //show progresscircle\n            //write stuff to status update\n            this.showProgressHolder = false;\n            this.serverStatusText = \"An error occured\";//to trigger display of greenworkingbackground\n\n            //buttons\n            this.showStartUpoadButton = true;\n            this.showStartAllOver = true;\n            this.showStopUpoadButton = false;\n\n            this.$refs.uploader.displayLoadingImage = false;\n            this.showQuotes = false;\n            \n            this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n            this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n\n          break;\n\n          case 'Marking completed successfully':\n            this.$refs.uploader.showLoadingMode = false;\n            this.$refs.uploader.showFinalStatus = true;\n            this.showQuotes = false;\n          break;\n\n          case 'Start All Over':\n          break;\n        }\n      },\n      files_change: function( _files ) {\n        if( _files.length > 0) {\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n        }else{\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n        }\n      },\n      toggleGeneratingLoremIpsum:function(){\n        this.startMimickingServerSentStatus = !this.startMimickingServerSentStatus;\n        if(this.startMimickingServerSentStatus){\n          var vue_instance = this;\n          this.mimickeryIntervalReference = setInterval(function(){\n            vue_instance.serverStatusText  = loremIpsum({\n                              count: 1                      // Number of words, sentences, or paragraphs to generate.\n                            , units: 'sentences'            // Generate words, sentences, or paragraphs.\n                            , sentenceLowerBound: 2         // Minimum words per sentence.\n                            , sentenceUpperBound: ( ( ( Math.random() + 0.1 ) * 10 ) + 2 )        // Maximum words per sentence.\n                            , format: 'plain'               // Plain text or html\n                          });\n          }, 2000 );\n          console.log(vue_instance.serverStatusText);\n        }else{\n          //clear any existing interval\n          if(this.mimickeryIntervalReference){\n            clearInterval(this.mimickeryIntervalReference);\n          }\n          }\n      }\n  }\n}\n</script>\n"],"sourceRoot":"src"}]}