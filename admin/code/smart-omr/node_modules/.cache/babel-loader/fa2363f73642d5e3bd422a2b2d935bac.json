{"remainingRequest":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/babel-loader/lib/index.js!/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/src/App.vue","mtime":1559117190804},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Uploader from \"./components/Uploader.vue\";\nimport loremIpsum from \"lorem-ipsum\";\nimport Swal from \"sweetalert2\";\nexport default {\n  components: {\n    Uploader: Uploader\n  },\n  data: function data() {\n    return {\n      showTestingGround: false,\n      files: [],\n      accept: \"image/png,image/gif,image/jpeg,image/pdf,doc/pdf\",\n      extensions: \"gif,jpg,jpeg,png,webp,pdf\",\n      // extensions: ['gif', 'jpg', 'jpeg','png', 'webp'],\n      // extensions: /\\.(gif|jpe?g|png|webp)$/i,\n      minSize: 1024,\n      size: 1024 * 1024 * 10,\n      multiple: true,\n      directory: false,\n      drop: true,\n      dropDirectory: true,\n      addIndex: false,\n      thread: 3,\n      name: \"file\",\n      postAction: \"/upload/post\",\n      // putAction: '/upload/put',\n      headers: {\n        \"X-Csrf-Token\": \"xxxx\"\n      },\n      data: {\n        _csrf_token: \"xxxxxx\"\n      },\n      autoCompress: 1024 * 1024,\n      uploadAuto: false,\n      isOption: false,\n      addData: {\n        show: false,\n        name: \"\",\n        type: \"\",\n        content: \"\"\n      },\n      editFile: {\n        show: false,\n        name: \"\"\n      },\n      status: \"...\",\n\n      /******** C O N D I T I O N A L    D I S P L A Y S ********/\n      showStartUpoadButton: true,\n      showStartAllOver: true,\n      realMarkingStartedSoShowProgressInFullscreen: false,\n      showQuotes: true,\n      showStopUpoadButton: true,\n      serverStatusText: \"\",\n      startMarking: true,\n      startMimickingServerSentStatus: true,\n      mimickeryIntervalReference: null,\n\n      /******** C S S    C L A S S E S ********/\n      //1. main grey background at default\n      //note that some of the classes are not necessarily for css rules, but simply markers that\n      //are helpful for dom inspection @debugging, so we know which css class is swapped in at any partuclar time\n      current_bottom_main_grey_background_class: \"\",\n      bottom_main_grey_background_class: {\n        \"-bottom_main_grey_background_class_not_shown bg-grey-light pin-b absolute h-0 opacity-0 w-full flex justify-center\": true\n      },\n      bottom_main_grey_background_class_slide_up: {\n        \"-bottom_main_grey_background_class_slide_up bg-grey-light p-2 pin-b absolute h-24 w-full flex justify-center\": true\n      },\n      //2. main grey background at start marking\n      bottom_main_grey_background_class_start_marking_class_fullscreen: {\n        \"-bottom_main_grey_background_class_start_marking_class_fullscreen bg-grey-light p-2 pin-b absolute h-full w-full flex justify-center\": true\n      },\n      //bottom green at default\n      current_bottom_green_background_class: \"\",\n      bottom_green_background_class: {\n        \"-bottom_green_background_class border rounded p-4 bg-green-lightest flex w-5/6\": true\n      },\n      //bottom green at start uploading\n      bottom_green_background_start_uploading_class: {\n        \"-bottom_green_background_start_uploading_class animateAll relative h-full justify-left border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n      //bottom green at start marking\n      bottom_green_background_class_start_marking_class: {\n        \"-bottom_green_background_class_start_marking_class animateAll relative h-full justify-center border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n      //progress holder at default\n      current_main_holdin_container_class: \"\",\n      main_holdin_container_class: {\n        \"-main_holdin_container_class rounded self-center text-grey-dark relative overflow-hidden w-auto ml-16 p-2 h-34\": true\n      },\n      //progress holder at start marking\n      main_holdin_container_start_marking_class: {\n        \"-main_holdin_container_start_marking_class rounded self-center text-grey-dark relative overflow-hidden w-full p-2 h-full\": true\n      },\n      //main holding container at default\n      current_progress_control_container_class: \"\",\n      progress_control_container_class: {\n        \"-ml-2 mt-6 w-full h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n      progress_control_container_start_marking_class: {\n        \"-ml-2 mt-6 w-32 h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n      //progress text at default\n      current_progress_text_class: \"\",\n      progress_text_class: {// \"btn\" : true\n      },\n      progress_text_start_marking_class: {\n        \"-progress_text_start_marking_class serverStatusText flex justify-center text-center inline-block self-center w-full h-10 asolute overflow-hidden\": true\n      },\n      current_spanprogresstext_class: \"\",\n      spanprogresstext_class: {\n        \"-spanprogresstext_class inline-block self-center relatvie tracking-wide text-xs p-2 font-bold text-blue-darker border rounded\": true\n      },\n      spanprogresstext_start_marking_class: {\n        \"-spanprogresstext_start_marking_class inline-block self-center relatvie tracking-wide text-xs bg-red-light p-2 font-bold text-white rounded\": true\n        /******** E N D  C S S    C L A S S E S ********/\n\n      }\n    };\n  },\n  watch: {\n    \"addData.show\": function addDataShow(show) {\n      if (show) {\n        this.addData.name = \"\";\n        this.addData.type = \"\";\n        this.addData.content = \"\";\n      }\n    }\n  },\n  created: function created() {\n    this.current_main_holdin_container_class = this.main_holdin_container_class;\n    this.current_progress_control_container_class = this.progress_control_container_class;\n    this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n    this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n    this.current_progress_text_class = this.progress_text_class;\n    this.current_spanprogresstext_class = this.spanprogresstext_class;\n  },\n  methods: {\n    updateServerStatus: function updateServerStatus(message) {\n      this.serverStatusText = message;\n    },\n    alert: function alert(message) {\n      var alert_type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n      var title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      // alert2({message})\n      var types = [\"warning\", \"error\", \"success\", \"info\", \"question\"];\n\n      if (title == null) {\n        //let it correspond to the types\n        title = types.length > alert_type ? types[alert_type] : \"Information\";\n        title = \"\".concat(title[0].toUpperCase()).concat(title.substr(1));\n      }\n\n      Swal.fire(title, String(message), alert_type > types.length ? 0 : types[alert_type]);\n    },\n    _allUploadsCompleted: function _allUploadsCompleted() {\n      //slide up botom panel to main focus\n      //show progresscircle\n      //write stuff to status update\n      this.realMarkingStartedSoShowProgressInFullscreen = true;\n      this.serverStatusText = \"All uploads successful. Now marking the scripts...\"; //to trigger display of greenworkingbackground\n\n      this.$refs.uploader.showLoadingMode = true;\n      this.showQuotes = true;\n      this.$refs.uploader.showFinalStatus = false; //buttons\n\n      this.showStartUpoadButton = false;\n      this.showStartAllOver = false;\n      this.showStopUpoadButton = false;\n      this.current_main_holdin_container_class = this.main_holdin_container_start_marking_class;\n      this.current_progress_text_class = this.progress_text_start_marking_class;\n      this.current_spanprogresstext_class = this.spanprogresstext_start_marking_class;\n      this.$refs.uploader.displayLoadingImage = false;\n      this.current_bottom_green_background_class = this.bottom_green_background_class_start_marking_class;\n      this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_start_marking_class_fullscreen;\n    },\n    _showErrorThatTerminatesOngoingMarking: function _showErrorThatTerminatesOngoingMarking(mssg) {\n      this.alert(mssg, 1); //slide up botom panel to main focus\n      //show progresscircle\n      //write stuff to status update\n\n      this.realMarkingStartedSoShowProgressInFullscreen = false; //empty server status text so to the green background is not rendered (watchers!)\n\n      this.serverStatusText = null; // this.serverStatusText = \"An error occured\";//to trigger display of greenworkingbackground\n      //buttons\n\n      this.showStartUpoadButton = true;\n      this.showStartAllOver = true;\n      this.showStopUpoadButton = false;\n      this.$refs.uploader.displayLoadingImage = false;\n      this.showQuotes = false;\n      this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n      this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n      this.$refs.uploader.recentMarkingSessionCompletedSuccessfully = false;\n    },\n    _markingCompletedSuccessfully: function _markingCompletedSuccessfully() {\n      this.startMimickingServerSentStatus = false;\n      this.$refs.uploader.showLoadingMode = false;\n      this.$refs.uploader.recentMarkingSessionCompletedSuccessfully = true;\n      this.$refs.uploader.showFinalStatus = true;\n      this.showQuotes = false;\n      this.serverStatusText = \"Marking completed successfully\";\n      this.showStartAllOver = true;\n    },\n    _startAllOver: function _startAllOver() {\n      //means we have already uploaded some stuff. We want to redo it\n      //we need to reset stuff too\n      if (this.$refs.uploader) {\n        this.$refs.uploader.ongoingServerPollTimestamp = null;\n        this.$refs.uploader.files = [];\n      }\n\n      this.serverStatusText = null;\n      this.$refs.uploader.commandedServerToStartMarking = false;\n    },\n    doUITransition: function doUITransition(status) {\n      /*\n        //loader img disappears\n        //the light green background enlarges to fill the screen\n        //red colored progress stuff becomes the progress bar\n        //quotes appear underneath the progressbar\n        //center of progressbar shows percentage completion\n        //at anytime that error occurs along the way, clear evrrything and use Swal to handle it\n        */\n      switch (status) {\n        case \"All Uploads Successful\":\n          this._allUploadsCompleted();\n\n          break;\n\n        case \"Show error\":\n          this._showErrorThatTerminatesOngoingMarking();\n\n          break;\n\n        case \"Marking completed successfully\":\n          this._markingCompletedSuccessfully();\n\n          break;\n\n        case \"Start All Over\":\n          break;\n      }\n    },\n    change_status: function change_status(event) {\n      this.status = event.target.parentElement.innerText.trim();\n      this.doUITransition(this.status);\n    },\n    files_change: function files_change(_files) {\n      if (_files.length > 0) {\n        //if server file stuff is ongoing, show full mode\n        if (!this.realMarkingStartedSoShowProgressInFullscreen) {\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n        } else {\n          //else if there was a recently concluded marking session, show the ready for upload mode\n          if (this.$refs.uploader.recentMarkingSessionCompletedSuccessfully) {\n            //only shorten this if and only if no upload is ongoing...it is funny that the custom Vue file uploader component module fires file change anyhow, anytime, randomy arbitrarily\n            //So ensure, specifically, that no marking is ongoing\n            //All these also ensures that we do not polute the UI - we are ensuring that we keep the UI as-is\n            if (this.$refs.uploader.isCurrentlyUploading) {\n              console.log(\"is currently uploading\");\n              this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_start_marking_class_fullscreen;\n            } else {\n              console.log(\"start fresh upload\");\n              this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n            }\n          }\n        }\n      } else {\n        this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n      }\n    },\n    toggleGeneratingLoremIpsum: function toggleGeneratingLoremIpsum() {\n      this.startMimickingServerSentStatus = !this.startMimickingServerSentStatus;\n\n      if (this.startMimickingServerSentStatus) {\n        var vue_instance = this;\n        this.mimickeryIntervalReference = setInterval(function () {\n          //at this interval's run, recheck if thre are changes to the token so we do not output when we ought not to\n          if (vue_instance.startMimickingServerSentStatus) {\n            vue_instance.serverStatusText = loremIpsum({\n              count: 1,\n              // Number of words, sentences, or paragraphs to generate.\n              units: \"sentences\",\n              // Generate words, sentences, or paragraphs.\n              sentenceLowerBound: 2,\n              // Minimum words per sentence.\n              sentenceUpperBound: (Math.random() + 0.1) * 10 + 2,\n              // Maximum words per sentence.\n              format: \"plain\" // Plain text or html\n\n            });\n          }\n        }, 2000);\n        console.log(vue_instance.serverStatusText);\n      } else {\n        //clear any existing interval\n        if (this.mimickeryIntervalReference) {\n          clearInterval(this.mimickeryIntervalReference);\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"flex relative\">\n    <!-- — - --  -->\n\n    <div style=\"width: 8%\"></div>\n\n    <div style=\"width: 95%\" class>\n      <div class=\"main-vue-app bg-grey-lightest rounded fixed w-4/5 pin-y overflow-visible m-5 border\">\n        <uploader\n          v-if=\"1\"\n          @files_change=\"files_change\"\n          @serverStatusText=\"updateServerStatus\"\n          @alert=\"alert\"\n          @_allUploadsCompleted=\"_allUploadsCompleted\"\n          @_showErrorThatTerminatesOngoingMarking=\"_showErrorThatTerminatesOngoingMarking\"\n          @_markingCompletedSuccessfully=\"_markingCompletedSuccessfully\"\n          @_startAllOver=\"_startAllOver\"\n          class=\"bg-grey-lightest\"\n          ref=\"uploader\"\n          :showStartUpoadButton=\"showStartUpoadButton\"\n          :showStartAllOver=\"showStartAllOver\"\n          :showStopUpoadButton=\"showStopUpoadButton\"\n          :serverStatusText=\"serverStatusText\"\n          :startMarking=\"startMarking\"\n          :main_holdin_container=\"current_main_holdin_container_class\"\n          :showProgressHolder=\"realMarkingStartedSoShowProgressInFullscreen\"\n          :showQuotes=\"showQuotes\"\n          :current_bottom_main_grey_background_class=\"current_bottom_main_grey_background_class\"\n          :current_bottom_green_background_class=\"current_bottom_green_background_class\"\n          :current_progress_control_container_class=\"current_progress_control_container_class\"\n          :current_progress_text_class=\"current_progress_text_class\"\n          :current_spanprogresstext_class=\"current_spanprogresstext_class\"\n        ></uploader>\n      </div>\n    </div>\n\n    <div\n      v-if=\"showTestingGround\"\n      style=\"width: 5%\"\n      class=\"bg-green-lightest rounded absolute pin-r m-5 min-h-full p-2 border text-xs\"\n    >\n      <label class=\"block cursor-pointer p-1 mt-1\">\n        All Uploads Successful\n        <input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\">\n      </label>\n      <label class=\"block cursor-pointer p-1 mt-1\">\n        Show error\n        <input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\">\n      </label>\n      <label class=\"block cursor-pointer p-1 mt-1\">\n        Marking completed successfully\n        <input\n          name=\"status[]\"\n          type=\"radio\"\n          @click=\"change_status($event)\"\n        >\n      </label>\n      <label class=\"block cursor-pointer p-1 mt-1\">\n        Start All Over\n        <input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\">\n      </label>\n\n      <label class=\"block cursor-pointer p-1 mt-1\">\n        Mimick server processing files status messages\n        <input\n          type=\"checkbox\"\n          @click=\"toggleGeneratingLoremIpsum\"\n        >\n      </label>\n\n      <div class=\"p-1 m-1 mt-12 border rounded bg-black text-white\" v-html=\"status\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Uploader from \"./components/Uploader.vue\";\nimport loremIpsum from \"lorem-ipsum\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  components: {\n    Uploader\n  },\n  data() {\n    return {\n      showTestingGround: false,\n      files: [],\n      accept: \"image/png,image/gif,image/jpeg,image/pdf,doc/pdf\",\n      extensions: \"gif,jpg,jpeg,png,webp,pdf\",\n      // extensions: ['gif', 'jpg', 'jpeg','png', 'webp'],\n      // extensions: /\\.(gif|jpe?g|png|webp)$/i,\n      minSize: 1024,\n      size: 1024 * 1024 * 10,\n      multiple: true,\n      directory: false,\n      drop: true,\n      dropDirectory: true,\n      addIndex: false,\n      thread: 3,\n      name: \"file\",\n      postAction: \"/upload/post\",\n      // putAction: '/upload/put',\n      headers: {\n        \"X-Csrf-Token\": \"xxxx\"\n      },\n      data: {\n        _csrf_token: \"xxxxxx\"\n      },\n      autoCompress: 1024 * 1024,\n      uploadAuto: false,\n      isOption: false,\n      addData: {\n        show: false,\n        name: \"\",\n        type: \"\",\n        content: \"\"\n      },\n      editFile: {\n        show: false,\n        name: \"\"\n      },\n      status: \"...\",\n\n      /******** C O N D I T I O N A L    D I S P L A Y S ********/\n\n      showStartUpoadButton: true,\n      showStartAllOver: true,\n      realMarkingStartedSoShowProgressInFullscreen: false,\n      showQuotes: true,\n      showStopUpoadButton: true,\n\n      serverStatusText: \"\",\n      startMarking: true,\n      startMimickingServerSentStatus: true,\n      mimickeryIntervalReference: null,\n\n      /******** C S S    C L A S S E S ********/\n\n      //1. main grey background at default\n      //note that some of the classes are not necessarily for css rules, but simply markers that\n      //are helpful for dom inspection @debugging, so we know which css class is swapped in at any partuclar time\n      current_bottom_main_grey_background_class: \"\",\n      bottom_main_grey_background_class: {\n        \"-bottom_main_grey_background_class_not_shown bg-grey-light pin-b absolute h-0 opacity-0 w-full flex justify-center\": true\n      },\n      bottom_main_grey_background_class_slide_up: {\n        \"-bottom_main_grey_background_class_slide_up bg-grey-light p-2 pin-b absolute h-24 w-full flex justify-center\": true\n      },\n      //2. main grey background at start marking\n      bottom_main_grey_background_class_start_marking_class_fullscreen: {\n        \"-bottom_main_grey_background_class_start_marking_class_fullscreen bg-grey-light p-2 pin-b absolute h-full w-full flex justify-center\": true\n      },\n\n      //bottom green at default\n      current_bottom_green_background_class: \"\",\n      bottom_green_background_class: {\n        \"-bottom_green_background_class border rounded p-4 bg-green-lightest flex w-5/6\": true\n      },\n      //bottom green at start uploading\n      bottom_green_background_start_uploading_class: {\n        \"-bottom_green_background_start_uploading_class animateAll relative h-full justify-left border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n      //bottom green at start marking\n      bottom_green_background_class_start_marking_class: {\n        \"-bottom_green_background_class_start_marking_class animateAll relative h-full justify-center border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n\n      //progress holder at default\n      current_main_holdin_container_class: \"\",\n      main_holdin_container_class: {\n        \"-main_holdin_container_class rounded self-center text-grey-dark relative overflow-hidden w-auto ml-16 p-2 h-34\": true\n      },\n      //progress holder at start marking\n      main_holdin_container_start_marking_class: {\n        \"-main_holdin_container_start_marking_class rounded self-center text-grey-dark relative overflow-hidden w-full p-2 h-full\": true\n      },\n\n      //main holding container at default\n      current_progress_control_container_class: \"\",\n      progress_control_container_class: {\n        \"-ml-2 mt-6 w-full h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n      progress_control_container_start_marking_class: {\n        \"-ml-2 mt-6 w-32 h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n\n      //progress text at default\n      current_progress_text_class: \"\",\n      progress_text_class: {\n        // \"btn\" : true\n      },\n      progress_text_start_marking_class: {\n        \"-progress_text_start_marking_class serverStatusText flex justify-center text-center inline-block self-center w-full h-10 asolute overflow-hidden\": true\n      },\n\n      current_spanprogresstext_class: \"\",\n      spanprogresstext_class: {\n        \"-spanprogresstext_class inline-block self-center relatvie tracking-wide text-xs p-2 font-bold text-blue-darker border rounded\": true\n      },\n      spanprogresstext_start_marking_class: {\n        \"-spanprogresstext_start_marking_class inline-block self-center relatvie tracking-wide text-xs bg-red-light p-2 font-bold text-white rounded\": true\n      }\n\n      /******** E N D  C S S    C L A S S E S ********/\n    };\n  },\n  watch: {\n    \"addData.show\"(show) {\n      if (show) {\n        this.addData.name = \"\";\n        this.addData.type = \"\";\n        this.addData.content = \"\";\n      }\n    }\n  },\n  created: function() {\n    this.current_main_holdin_container_class = this.main_holdin_container_class;\n    this.current_progress_control_container_class = this.progress_control_container_class;\n    this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n    this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n    this.current_progress_text_class = this.progress_text_class;\n    this.current_spanprogresstext_class = this.spanprogresstext_class;\n  },\n  methods: {\n    updateServerStatus: function(message) {\n      this.serverStatusText = message;\n    },\n    alert(message, alert_type = 3, title = null) {\n      // alert2({message})\n      let types = [\"warning\", \"error\", \"success\", \"info\", \"question\"];\n      if (title == null) {\n        //let it correspond to the types\n        title = types.length > alert_type ? types[alert_type] : \"Information\";\n        title = `${title[0].toUpperCase()}${title.substr(1)}`;\n      }\n      Swal.fire(\n        title,\n        String(message),\n        alert_type > types.length ? 0 : types[alert_type]\n      );\n    },\n\n    _allUploadsCompleted: function() {\n      //slide up botom panel to main focus\n      //show progresscircle\n      //write stuff to status update\n      this.realMarkingStartedSoShowProgressInFullscreen = true;\n      this.serverStatusText =\n        \"All uploads successful. Now marking the scripts...\"; //to trigger display of greenworkingbackground\n\n      this.$refs.uploader.showLoadingMode = true;\n      this.showQuotes = true;\n      this.$refs.uploader.showFinalStatus = false;\n\n      //buttons\n      this.showStartUpoadButton = false;\n      this.showStartAllOver = false;\n      this.showStopUpoadButton = false;\n\n      this.current_main_holdin_container_class = this.main_holdin_container_start_marking_class;\n      this.current_progress_text_class = this.progress_text_start_marking_class;\n      this.current_spanprogresstext_class = this.spanprogresstext_start_marking_class;\n\n      this.$refs.uploader.displayLoadingImage = false;\n      this.current_bottom_green_background_class = this.bottom_green_background_class_start_marking_class;\n      this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_start_marking_class_fullscreen;\n    },\n\n    _showErrorThatTerminatesOngoingMarking: function(mssg) {\n      this.alert(mssg, 1);\n\n      //slide up botom panel to main focus\n      //show progresscircle\n      //write stuff to status update\n      this.realMarkingStartedSoShowProgressInFullscreen = false;\n      //empty server status text so to the green background is not rendered (watchers!)\n      this.serverStatusText = null;\n      // this.serverStatusText = \"An error occured\";//to trigger display of greenworkingbackground\n\n      //buttons\n      this.showStartUpoadButton = true;\n      this.showStartAllOver = true;\n      this.showStopUpoadButton = false;\n\n      this.$refs.uploader.displayLoadingImage = false;\n      this.showQuotes = false;\n\n      this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n      this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n      this.$refs.uploader.recentMarkingSessionCompletedSuccessfully = false;\n    },\n\n    _markingCompletedSuccessfully: function() {\n      this.startMimickingServerSentStatus = false;\n      this.$refs.uploader.showLoadingMode = false;\n      this.$refs.uploader.recentMarkingSessionCompletedSuccessfully = true;\n      this.$refs.uploader.showFinalStatus = true;\n      this.showQuotes = false;\n      this.serverStatusText = \"Marking completed successfully\";\n      this.showStartAllOver = true;\n    },\n\n    _startAllOver: function() {\n      //means we have already uploaded some stuff. We want to redo it\n      //we need to reset stuff too\n      if (this.$refs.uploader) {\n        this.$refs.uploader.ongoingServerPollTimestamp = null;\n        this.$refs.uploader.files = [];\n      }\n\n      this.serverStatusText = null;\n      this.$refs.uploader.commandedServerToStartMarking = false;\n\n    },\n\n    doUITransition: function(status) {\n      /*\n        //loader img disappears\n        //the light green background enlarges to fill the screen\n        //red colored progress stuff becomes the progress bar\n        //quotes appear underneath the progressbar\n        //center of progressbar shows percentage completion\n        //at anytime that error occurs along the way, clear evrrything and use Swal to handle it\n        */\n      switch (status) {\n        case \"All Uploads Successful\":\n          this._allUploadsCompleted();\n          break;\n\n        case \"Show error\":\n          this._showErrorThatTerminatesOngoingMarking();\n          break;\n\n        case \"Marking completed successfully\":\n          this._markingCompletedSuccessfully();\n          break;\n\n        case \"Start All Over\":\n          break;\n      }\n    },\n\n    change_status: function(event) {\n      this.status = event.target.parentElement.innerText.trim();\n      this.doUITransition(this.status);\n    },\n\n    files_change: function(_files) {\n      if (_files.length > 0) {\n        //if server file stuff is ongoing, show full mode\n        if (!this.realMarkingStartedSoShowProgressInFullscreen) {\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n        } else {\n          //else if there was a recently concluded marking session, show the ready for upload mode\n          if (this.$refs.uploader.recentMarkingSessionCompletedSuccessfully) {\n            //only shorten this if and only if no upload is ongoing...it is funny that the custom Vue file uploader component module fires file change anyhow, anytime, randomy arbitrarily\n            //So ensure, specifically, that no marking is ongoing\n            //All these also ensures that we do not polute the UI - we are ensuring that we keep the UI as-is\n            if (this.$refs.uploader.isCurrentlyUploading) {\n              console.log(\"is currently uploading\");\n              this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_start_marking_class_fullscreen;\n            } else {\n              console.log(\"start fresh upload\");\n              this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n            }\n          }\n        }\n      } else {\n        this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n      }\n    },\n    toggleGeneratingLoremIpsum: function() {\n      this.startMimickingServerSentStatus = !this\n        .startMimickingServerSentStatus;\n      if (this.startMimickingServerSentStatus) {\n        var vue_instance = this;\n        this.mimickeryIntervalReference = setInterval(function() {\n          //at this interval's run, recheck if thre are changes to the token so we do not output when we ought not to\n          if (vue_instance.startMimickingServerSentStatus) {\n            vue_instance.serverStatusText = loremIpsum({\n              count: 1, // Number of words, sentences, or paragraphs to generate.\n              units: \"sentences\", // Generate words, sentences, or paragraphs.\n              sentenceLowerBound: 2, // Minimum words per sentence.\n              sentenceUpperBound: (Math.random() + 0.1) * 10 + 2, // Maximum words per sentence.\n              format: \"plain\" // Plain text or html\n            });\n          }\n        }, 2000);\n        console.log(vue_instance.serverStatusText);\n      } else {\n        //clear any existing interval\n        if (this.mimickeryIntervalReference) {\n          clearInterval(this.mimickeryIntervalReference);\n        }\n      }\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src"}]}