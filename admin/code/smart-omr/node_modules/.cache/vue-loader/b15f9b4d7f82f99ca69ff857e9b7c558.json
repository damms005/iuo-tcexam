{"remainingRequest":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/src/App.vue","mtime":1551447803686},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n  import Uploader from './components/Uploader.vue'\n  import loremIpsum from 'lorem-ipsum'\n  import Swal from 'sweetalert2'\n\n  export default {\n    components: {\n      Uploader\n    },\n    data() {\n      return {\n        showTestingGround: false,\n        files: [],\n        accept: 'image/png,image/gif,image/jpeg,image/pdf,doc/pdf',\n        extensions: 'gif,jpg,jpeg,png,webp,pdf',\n        // extensions: ['gif', 'jpg', 'jpeg','png', 'webp'],\n        // extensions: /\\.(gif|jpe?g|png|webp)$/i,\n        minSize: 1024,\n        size: 1024 * 1024 * 10,\n        multiple: true,\n        directory: false,\n        drop: true,\n        dropDirectory: true,\n        addIndex: false,\n        thread: 3,\n        name: 'file',\n        postAction: '/upload/post',\n        // putAction: '/upload/put',\n        headers: {\n          'X-Csrf-Token': 'xxxx',\n        },\n        data: {\n          '_csrf_token': 'xxxxxx',\n        },\n        autoCompress: 1024 * 1024,\n        uploadAuto: false,\n        isOption: false,\n        addData: {\n          show: false,\n          name: '',\n          type: '',\n          content: '',\n        },\n        editFile: {\n          show: false,\n          name: '',\n        },\n        status: \"...\",\n\n\n      /******** C O N D I T I O N A L    D I S P L A Y S ********/\n\n        showStartUpoadButton: true,\n        showStartAllOver: true,\n        showProgressHolder: false,\n        showQuotes: false,\n        showStopUpoadButton: true,\n        serverStatusText: '',\n        startMarking: false,\n        startMimickingServerSentStatus: false,\n        mimickeryIntervalReference: null,\n\n\n      /******** C S S    C L A S S E S ********/\n\n      //1. main grey background at default\n      //note that some of the classes are not necessarily for css rules, but simply markers that \n      //are helpful for dom inspection @debugging, so we know which css class is swapped in at any partuclar time\n      current_bottom_main_grey_background_class: \"\",\n      bottom_main_grey_background_class: {\n        \"-bottom_main_grey_background_class bg-grey-light pin-b absolute h-0 opacity-0 w-full flex justify-center\": true\n      },\n      bottom_main_grey_background_class_slide_up: {\n        \"-bottom_main_grey_background_class_slide_up bg-grey-light p-2 pin-b absolute h-24 w-full flex justify-center\": true\n      },\n      //2. main grey background at start marking\n      bottom_main_grey_background_class_start_marking_class: {\n        \"-bottom_main_grey_background_class_start_marking_class bg-grey-light p-2 pin-b absolute h-full w-full flex justify-center\": true\n      },\n\n\n      //bottom green at default      \n      current_bottom_green_background_class: \"\",\n      bottom_green_background_class: {\n        \"-bottom_green_background_class border rounded p-4 bg-green-lightest flex w-5/6\": true\n      },\n      //bottom green at start marking\n      bottom_green_background_start_uploading_class: {\n        \"-bottom_green_background_start_uploading_class animateAll relative h-full justify-left border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n      //bottom green at start marking\n      bottom_green_background_class_start_marking_class: {\n        \"-bottom_green_background_class_start_marking_class animateAll relative h-full justify-center border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n\n\n      //progress holder at default\n      current_main_holdin_container_class: \"\",\n      main_holdin_container_class: {\n        \"-main_holdin_container_class rounded self-center text-grey-dark relative overflow-hidden w-auto ml-16 p-2 h-34\": true\n      },\n      //progress holder at start marking\n      main_holdin_container_start_marking_class: {\n        \"-main_holdin_container_start_marking_class rounded self-center text-grey-dark relative overflow-hidden w-full p-2 h-full\": true\n      },\n\n\n      //main holding container at default\n      current_progress_control_container_class: \"\",\n      progress_control_container_class: {\n        \"-ml-2 mt-6 w-full h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n      progress_control_container_start_marking_class: {\n        \"-ml-2 mt-6 w-32 h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n\n\n      //progress text at default\n      current_progress_text_class: \"\",\n      progress_text_class: {\n        // \"btn\" : true\n      },\n      progress_text_start_marking_class: {\n        \"-progress_text_start_marking_class serverStatusText flex justify-center text-center inline-block self-center w-full h-10 asolute overflow-hidden\": true\n      },\n\n      current_spanprogresstext_class: \"\",\n      spanprogresstext_class: {\n        \"-spanprogresstext_class inline-block self-center relatvie tracking-wide text-xs p-2 font-bold text-blue-darker border rounded\": true\n      },\n      spanprogresstext_start_marking_class: {\n        \"-spanprogresstext_start_marking_class inline-block self-center relatvie tracking-wide text-xs bg-red-light p-2 font-bold text-white rounded\": true\n      }\n\n      /******** C S S    C L A S S E S ********/\n\n\n      }\n    },\n    watch: {\n      'addData.show'(show) {\n        if (show) {\n          this.addData.name = ''\n          this.addData.type = ''\n          this.addData.content = ''\n        }\n      }\n    },\n    created:function(){\n      this.current_main_holdin_container_class = this.main_holdin_container_class;\n      this.current_progress_control_container_class = this.progress_control_container_class;\n      this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n      this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n      this.current_progress_text_class = this.progress_text_class;\n      this.current_spanprogresstext_class = this.spanprogresstext_class;\n    },\n    methods: {\n      updateServerStatus:function( message ){\n        this.serverStatusText = message;\n      },\n      alert( message , alert_type = 3 , title = null ) {\n        // alert2({message})\n        let types = ['warning', 'error', 'success', 'info', 'question'];\n        if(title==null){\n          //let it correspond to the types\n          title = types.length > alert_type ? types[alert_type] : 'Information';\n          title = `${title[0].toUpperCase()}${title.substr(1)}`;\n        }\n        Swal.fire(\n          title,\n          String(message),\n          ( alert_type > types.length ? 0 : types[alert_type] )\n        )\n      },\n\n      _allUploadsCompleted:function(){\n\n            //slide up botom panel to main focus\n            //show progresscircle\n            //write stuff to status update\n            this.showProgressHolder = true;\n            this.serverStatusText = \"All uploads successful. Now marking the scripts...\";//to trigger display of greenworkingbackground\n\n            this.$refs.uploader.showLoadingMode = true;\n            this.showQuotes = true;\n            this.$refs.uploader.showFinalStatus = false;\n\n            //buttons\n            this.showStartUpoadButton = false;\n            this.showStartAllOver = false;\n            this.showStopUpoadButton = false;\n\n            this.current_main_holdin_container_class = this.main_holdin_container_start_marking_class;\n            this.current_progress_text_class = this.progress_text_start_marking_class;\n            this.current_spanprogresstext_class = this.spanprogresstext_start_marking_class;\n\n            this.$refs.uploader.displayLoadingImage = false;\n            this.current_bottom_green_background_class = this.bottom_green_background_class_start_marking_class;\n            this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_start_marking_class;\n      },\n\n      _showErrorThatTerminatesOngoingMarking: function( mssg ){\n\n          this.alert(mssg , 1 );\n\n          //slide up botom panel to main focus\n          //show progresscircle\n          //write stuff to status update\n          this.showProgressHolder = false;\n          //empty server status text so to thr green background is not renderes (watchers!)\n          this.serverStatusText = null;\n          // this.serverStatusText = \"An error occured\";//to trigger display of greenworkingbackground\n\n          //buttons\n          this.showStartUpoadButton = true;\n          this.showStartAllOver = true;\n          this.showStopUpoadButton = false;\n\n          this.$refs.uploader.displayLoadingImage = false;\n          this.showQuotes = false;\n          \n          this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n      },\n\n      _markingCompletedSuccessfully: function(){\n\n          this.startMimickingServerSentStatus = false;\n          this.$refs.uploader.showLoadingMode = false;\n          this.$refs.uploader.showFinalStatus = true;\n          this.showQuotes = false;\n          this.serverStatusText = \"Marking completed successful\";\n          this.showStartAllOver = true;\n      },\n\n      _startAllOver: function(){\n\n        //means we have already uploaded some stuff. We want to redo it\n        //we need to reset stuff too\n        if( this.$refs.uploader ) {\n          this.$refs.uploader.ongoingServerPollTimestamp = null;\n          this.$refs.uploader.files = [];\n        }\n\n        this.serverStatusText = null;\n\n      },\n\n      doUITransition: function(status){\n        /*\n        //loader img disappears\n        //the light green background enlarges to fill the screen\n        //red colored progress stuff becomes the progress bar\n        //quotes appear underneath the progressbar\n        //center of progressbar shows percentage completion\n        //at anytime that error occurs along the way, clear evrrything and use Swal to handle it\n        */\n        switch( status ){\n\n          case 'All Uploads Successful':\n          this._allUploadsCompleted();\n          break;\n\n          case 'Show error':\n          this.rkingErrorThatTermiOngoingnatesMarking();\n          break;\n\n          case 'Marking completed successfully':\n          this._markingCompletedSuccessfully();\n          break;\n\n          case 'Start All Over':\n          break;\n        }\n      },\n      change_status:function(event){\n\n        this.status = event.target.parentElement.innerText.trim();\n        this.doUITransition(this.status);\n        \n      },\n      files_change: function( _files ) {\n        if( _files.length > 0) {\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n        }else{\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n        }\n      },\n      toggleGeneratingLoremIpsum:function(){\n        this.startMimickingServerSentStatus = !this.startMimickingServerSentStatus;\n        if(this.startMimickingServerSentStatus){\n          var vue_instance = this;\n          this.mimickeryIntervalReference = setInterval(function(){\n            //at this interval's run, recheck if thre are changes to the token so we do not output when we ought not to\n            if(vue_instance.startMimickingServerSentStatus){\n              vue_instance.serverStatusText  = loremIpsum({\n                                count: 1                      // Number of words, sentences, or paragraphs to generate.\n                              , units: 'sentences'            // Generate words, sentences, or paragraphs.\n                              , sentenceLowerBound: 2         // Minimum words per sentence.\n                              , sentenceUpperBound: ( ( ( Math.random() + 0.1 ) * 10 ) + 2 )        // Maximum words per sentence.\n                              , format: 'plain'               // Plain text or html\n                            });\n            }\n          }, 2000 );\n          console.log(vue_instance.serverStatusText);\n        }else{\n          //clear any existing interval\n          if(this.mimickeryIntervalReference){\n            clearInterval(this.mimickeryIntervalReference);\n          }\n          }\n      }\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"flex relative\">\n    <!-- — - --  -->\n\n    <div style=\"width: 8%\">\n    </div>\n\n    <div style=\"width: 95%\" class=\"\">\n          <div class=\"bg-grey-lightest rounded fixed w-4/5 pin-y overflow-visible m-5 border\">\n            <uploader v-if=\"1\"\n              @files_change=\"files_change\"\n              @serverStatusText=\"updateServerStatus\"\n              @alert=\"alert\"\n              @_allUploadsCompleted=\"_allUploadsCompleted\"\n              @_showErrorThatTerminatesOngoingMarking=\"_showErrorThatTerminatesOngoingMarking\"\n              @_markingCompletedSuccessfully=\"_markingCompletedSuccessfully\"\n              @_startAllOver=\"_startAllOver\"\n              class=\"bg-grey-lightest\"\n              ref=\"uploader\"\n              :showStartUpoadButton=\"showStartUpoadButton\"\n              :showStartAllOver=\"showStartAllOver\"\n              :showStopUpoadButton=\"showStopUpoadButton\"\n              :serverStatusText=\"serverStatusText\"\n              :startMarking=\"startMarking\"\n              :main_holdin_container=\"current_main_holdin_container_class\"\n              :showProgressHolder=\"showProgressHolder\"\n              :showQuotes=\"showQuotes\"\n              :current_bottom_main_grey_background_class=\"current_bottom_main_grey_background_class\"\n              :current_bottom_green_background_class=\"current_bottom_green_background_class\"\n              :current_progress_control_container_class=\"current_progress_control_container_class\"\n              :current_progress_text_class=\"current_progress_text_class\"\n              :current_spanprogresstext_class=\"current_spanprogresstext_class\"\n            ></uploader>\n          </div>\n    </div>\n\n    <div v-if='showTestingGround' style=\"width: 5%\" class=\"bg-green-lightest rounded absolute pin-r m-5 min-h-full p-2 border text-xs\">\n      <label class=\"block cursor-pointer p-1 mt-1 \">All Uploads Successful<input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\"> </label>\n      <label class=\"block cursor-pointer p-1 mt-1 \">Show error<input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\"> </label>\n      <label class=\"block cursor-pointer p-1 mt-1 \">Marking completed successfully<input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\"> </label>\n      <label class=\"block cursor-pointer p-1 mt-1 \">Start All Over<input name=\"status[]\" type=\"radio\" @click=\"change_status($event)\"> </label>\n\n      <label class=\"block cursor-pointer p-1 mt-1 \">\n        Mimick server processing files status messages <input type=\"checkbox\" @click=\"toggleGeneratingLoremIpsum\">\n      </label>\n\n      <div class=\"p-1 m-1 mt-12 border rounded bg-black text-white\" v-html=\"status\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n  import Uploader from './components/Uploader.vue'\n  import loremIpsum from 'lorem-ipsum'\n  import Swal from 'sweetalert2'\n\n  export default {\n    components: {\n      Uploader\n    },\n    data() {\n      return {\n        showTestingGround: false,\n        files: [],\n        accept: 'image/png,image/gif,image/jpeg,image/pdf,doc/pdf',\n        extensions: 'gif,jpg,jpeg,png,webp,pdf',\n        // extensions: ['gif', 'jpg', 'jpeg','png', 'webp'],\n        // extensions: /\\.(gif|jpe?g|png|webp)$/i,\n        minSize: 1024,\n        size: 1024 * 1024 * 10,\n        multiple: true,\n        directory: false,\n        drop: true,\n        dropDirectory: true,\n        addIndex: false,\n        thread: 3,\n        name: 'file',\n        postAction: '/upload/post',\n        // putAction: '/upload/put',\n        headers: {\n          'X-Csrf-Token': 'xxxx',\n        },\n        data: {\n          '_csrf_token': 'xxxxxx',\n        },\n        autoCompress: 1024 * 1024,\n        uploadAuto: false,\n        isOption: false,\n        addData: {\n          show: false,\n          name: '',\n          type: '',\n          content: '',\n        },\n        editFile: {\n          show: false,\n          name: '',\n        },\n        status: \"...\",\n\n\n      /******** C O N D I T I O N A L    D I S P L A Y S ********/\n\n        showStartUpoadButton: true,\n        showStartAllOver: true,\n        showProgressHolder: false,\n        showQuotes: false,\n        showStopUpoadButton: true,\n        serverStatusText: '',\n        startMarking: false,\n        startMimickingServerSentStatus: false,\n        mimickeryIntervalReference: null,\n\n\n      /******** C S S    C L A S S E S ********/\n\n      //1. main grey background at default\n      //note that some of the classes are not necessarily for css rules, but simply markers that \n      //are helpful for dom inspection @debugging, so we know which css class is swapped in at any partuclar time\n      current_bottom_main_grey_background_class: \"\",\n      bottom_main_grey_background_class: {\n        \"-bottom_main_grey_background_class bg-grey-light pin-b absolute h-0 opacity-0 w-full flex justify-center\": true\n      },\n      bottom_main_grey_background_class_slide_up: {\n        \"-bottom_main_grey_background_class_slide_up bg-grey-light p-2 pin-b absolute h-24 w-full flex justify-center\": true\n      },\n      //2. main grey background at start marking\n      bottom_main_grey_background_class_start_marking_class: {\n        \"-bottom_main_grey_background_class_start_marking_class bg-grey-light p-2 pin-b absolute h-full w-full flex justify-center\": true\n      },\n\n\n      //bottom green at default      \n      current_bottom_green_background_class: \"\",\n      bottom_green_background_class: {\n        \"-bottom_green_background_class border rounded p-4 bg-green-lightest flex w-5/6\": true\n      },\n      //bottom green at start marking\n      bottom_green_background_start_uploading_class: {\n        \"-bottom_green_background_start_uploading_class animateAll relative h-full justify-left border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n      //bottom green at start marking\n      bottom_green_background_class_start_marking_class: {\n        \"-bottom_green_background_class_start_marking_class animateAll relative h-full justify-center border rounded p-4 bg-green-lightest flex w-3/4\": true\n      },\n\n\n      //progress holder at default\n      current_main_holdin_container_class: \"\",\n      main_holdin_container_class: {\n        \"-main_holdin_container_class rounded self-center text-grey-dark relative overflow-hidden w-auto ml-16 p-2 h-34\": true\n      },\n      //progress holder at start marking\n      main_holdin_container_start_marking_class: {\n        \"-main_holdin_container_start_marking_class rounded self-center text-grey-dark relative overflow-hidden w-full p-2 h-full\": true\n      },\n\n\n      //main holding container at default\n      current_progress_control_container_class: \"\",\n      progress_control_container_class: {\n        \"-ml-2 mt-6 w-full h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n      progress_control_container_start_marking_class: {\n        \"-ml-2 mt-6 w-32 h-32 block pin-x pin-y self-center text-center relative progress-control-container\": true\n      },\n\n\n      //progress text at default\n      current_progress_text_class: \"\",\n      progress_text_class: {\n        // \"btn\" : true\n      },\n      progress_text_start_marking_class: {\n        \"-progress_text_start_marking_class serverStatusText flex justify-center text-center inline-block self-center w-full h-10 asolute overflow-hidden\": true\n      },\n\n      current_spanprogresstext_class: \"\",\n      spanprogresstext_class: {\n        \"-spanprogresstext_class inline-block self-center relatvie tracking-wide text-xs p-2 font-bold text-blue-darker border rounded\": true\n      },\n      spanprogresstext_start_marking_class: {\n        \"-spanprogresstext_start_marking_class inline-block self-center relatvie tracking-wide text-xs bg-red-light p-2 font-bold text-white rounded\": true\n      }\n\n      /******** C S S    C L A S S E S ********/\n\n\n      }\n    },\n    watch: {\n      'addData.show'(show) {\n        if (show) {\n          this.addData.name = ''\n          this.addData.type = ''\n          this.addData.content = ''\n        }\n      }\n    },\n    created:function(){\n      this.current_main_holdin_container_class = this.main_holdin_container_class;\n      this.current_progress_control_container_class = this.progress_control_container_class;\n      this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n      this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n      this.current_progress_text_class = this.progress_text_class;\n      this.current_spanprogresstext_class = this.spanprogresstext_class;\n    },\n    methods: {\n      updateServerStatus:function( message ){\n        this.serverStatusText = message;\n      },\n      alert( message , alert_type = 3 , title = null ) {\n        // alert2({message})\n        let types = ['warning', 'error', 'success', 'info', 'question'];\n        if(title==null){\n          //let it correspond to the types\n          title = types.length > alert_type ? types[alert_type] : 'Information';\n          title = `${title[0].toUpperCase()}${title.substr(1)}`;\n        }\n        Swal.fire(\n          title,\n          String(message),\n          ( alert_type > types.length ? 0 : types[alert_type] )\n        )\n      },\n\n      _allUploadsCompleted:function(){\n\n            //slide up botom panel to main focus\n            //show progresscircle\n            //write stuff to status update\n            this.showProgressHolder = true;\n            this.serverStatusText = \"All uploads successful. Now marking the scripts...\";//to trigger display of greenworkingbackground\n\n            this.$refs.uploader.showLoadingMode = true;\n            this.showQuotes = true;\n            this.$refs.uploader.showFinalStatus = false;\n\n            //buttons\n            this.showStartUpoadButton = false;\n            this.showStartAllOver = false;\n            this.showStopUpoadButton = false;\n\n            this.current_main_holdin_container_class = this.main_holdin_container_start_marking_class;\n            this.current_progress_text_class = this.progress_text_start_marking_class;\n            this.current_spanprogresstext_class = this.spanprogresstext_start_marking_class;\n\n            this.$refs.uploader.displayLoadingImage = false;\n            this.current_bottom_green_background_class = this.bottom_green_background_class_start_marking_class;\n            this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_start_marking_class;\n      },\n\n      _showErrorThatTerminatesOngoingMarking: function( mssg ){\n\n          this.alert(mssg , 1 );\n\n          //slide up botom panel to main focus\n          //show progresscircle\n          //write stuff to status update\n          this.showProgressHolder = false;\n          //empty server status text so to thr green background is not renderes (watchers!)\n          this.serverStatusText = null;\n          // this.serverStatusText = \"An error occured\";//to trigger display of greenworkingbackground\n\n          //buttons\n          this.showStartUpoadButton = true;\n          this.showStartAllOver = true;\n          this.showStopUpoadButton = false;\n\n          this.$refs.uploader.displayLoadingImage = false;\n          this.showQuotes = false;\n          \n          this.current_bottom_green_background_class = this.bottom_green_background_start_uploading_class;\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n      },\n\n      _markingCompletedSuccessfully: function(){\n\n          this.startMimickingServerSentStatus = false;\n          this.$refs.uploader.showLoadingMode = false;\n          this.$refs.uploader.showFinalStatus = true;\n          this.showQuotes = false;\n          this.serverStatusText = \"Marking completed successful\";\n          this.showStartAllOver = true;\n      },\n\n      _startAllOver: function(){\n\n        //means we have already uploaded some stuff. We want to redo it\n        //we need to reset stuff too\n        if( this.$refs.uploader ) {\n          this.$refs.uploader.ongoingServerPollTimestamp = null;\n          this.$refs.uploader.files = [];\n        }\n\n        this.serverStatusText = null;\n\n      },\n\n      doUITransition: function(status){\n        /*\n        //loader img disappears\n        //the light green background enlarges to fill the screen\n        //red colored progress stuff becomes the progress bar\n        //quotes appear underneath the progressbar\n        //center of progressbar shows percentage completion\n        //at anytime that error occurs along the way, clear evrrything and use Swal to handle it\n        */\n        switch( status ){\n\n          case 'All Uploads Successful':\n          this._allUploadsCompleted();\n          break;\n\n          case 'Show error':\n          this.rkingErrorThatTermiOngoingnatesMarking();\n          break;\n\n          case 'Marking completed successfully':\n          this._markingCompletedSuccessfully();\n          break;\n\n          case 'Start All Over':\n          break;\n        }\n      },\n      change_status:function(event){\n\n        this.status = event.target.parentElement.innerText.trim();\n        this.doUITransition(this.status);\n        \n      },\n      files_change: function( _files ) {\n        if( _files.length > 0) {\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class_slide_up;\n        }else{\n          this.current_bottom_main_grey_background_class = this.bottom_main_grey_background_class;\n        }\n      },\n      toggleGeneratingLoremIpsum:function(){\n        this.startMimickingServerSentStatus = !this.startMimickingServerSentStatus;\n        if(this.startMimickingServerSentStatus){\n          var vue_instance = this;\n          this.mimickeryIntervalReference = setInterval(function(){\n            //at this interval's run, recheck if thre are changes to the token so we do not output when we ought not to\n            if(vue_instance.startMimickingServerSentStatus){\n              vue_instance.serverStatusText  = loremIpsum({\n                                count: 1                      // Number of words, sentences, or paragraphs to generate.\n                              , units: 'sentences'            // Generate words, sentences, or paragraphs.\n                              , sentenceLowerBound: 2         // Minimum words per sentence.\n                              , sentenceUpperBound: ( ( ( Math.random() + 0.1 ) * 10 ) + 2 )        // Maximum words per sentence.\n                              , format: 'plain'               // Plain text or html\n                            });\n            }\n          }, 2000 );\n          console.log(vue_instance.serverStatusText);\n        }else{\n          //clear any existing interval\n          if(this.mimickeryIntervalReference){\n            clearInterval(this.mimickeryIntervalReference);\n          }\n          }\n      }\n  }\n}\n</script>\n"]}]}