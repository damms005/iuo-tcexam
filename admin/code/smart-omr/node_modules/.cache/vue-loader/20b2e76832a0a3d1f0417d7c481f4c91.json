{"remainingRequest":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/src/App.vue","mtime":1559117190804},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/opt/lampp/htdocs/git-collaborations/tcexam/admin/code/smart-omr/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"flex relative\" }, [\n    _c(\"div\", { staticStyle: { width: \"8%\" } }),\n    _c(\"div\", { staticStyle: { width: \"95%\" } }, [\n      _c(\n        \"div\",\n        {\n          staticClass:\n            \"main-vue-app bg-grey-lightest rounded fixed w-4/5 pin-y overflow-visible m-5 border\"\n        },\n        [\n          1\n            ? _c(\"uploader\", {\n                ref: \"uploader\",\n                staticClass: \"bg-grey-lightest\",\n                attrs: {\n                  showStartUpoadButton: _vm.showStartUpoadButton,\n                  showStartAllOver: _vm.showStartAllOver,\n                  showStopUpoadButton: _vm.showStopUpoadButton,\n                  serverStatusText: _vm.serverStatusText,\n                  startMarking: _vm.startMarking,\n                  main_holdin_container:\n                    _vm.current_main_holdin_container_class,\n                  showProgressHolder:\n                    _vm.realMarkingStartedSoShowProgressInFullscreen,\n                  showQuotes: _vm.showQuotes,\n                  current_bottom_main_grey_background_class:\n                    _vm.current_bottom_main_grey_background_class,\n                  current_bottom_green_background_class:\n                    _vm.current_bottom_green_background_class,\n                  current_progress_control_container_class:\n                    _vm.current_progress_control_container_class,\n                  current_progress_text_class: _vm.current_progress_text_class,\n                  current_spanprogresstext_class:\n                    _vm.current_spanprogresstext_class\n                },\n                on: {\n                  files_change: _vm.files_change,\n                  serverStatusText: _vm.updateServerStatus,\n                  alert: _vm.alert,\n                  _allUploadsCompleted: _vm._allUploadsCompleted,\n                  _showErrorThatTerminatesOngoingMarking:\n                    _vm._showErrorThatTerminatesOngoingMarking,\n                  _markingCompletedSuccessfully:\n                    _vm._markingCompletedSuccessfully,\n                  _startAllOver: _vm._startAllOver\n                }\n              })\n            : _vm._e()\n        ],\n        1\n      )\n    ]),\n    _vm.showTestingGround\n      ? _c(\n          \"div\",\n          {\n            staticClass:\n              \"bg-green-lightest rounded absolute pin-r m-5 min-h-full p-2 border text-xs\",\n            staticStyle: { width: \"5%\" }\n          },\n          [\n            _c(\"label\", { staticClass: \"block cursor-pointer p-1 mt-1\" }, [\n              _vm._v(\"\\n      All Uploads Successful\\n      \"),\n              _c(\"input\", {\n                attrs: { name: \"status[]\", type: \"radio\" },\n                on: {\n                  click: function($event) {\n                    return _vm.change_status($event)\n                  }\n                }\n              })\n            ]),\n            _c(\"label\", { staticClass: \"block cursor-pointer p-1 mt-1\" }, [\n              _vm._v(\"\\n      Show error\\n      \"),\n              _c(\"input\", {\n                attrs: { name: \"status[]\", type: \"radio\" },\n                on: {\n                  click: function($event) {\n                    return _vm.change_status($event)\n                  }\n                }\n              })\n            ]),\n            _c(\"label\", { staticClass: \"block cursor-pointer p-1 mt-1\" }, [\n              _vm._v(\"\\n      Marking completed successfully\\n      \"),\n              _c(\"input\", {\n                attrs: { name: \"status[]\", type: \"radio\" },\n                on: {\n                  click: function($event) {\n                    return _vm.change_status($event)\n                  }\n                }\n              })\n            ]),\n            _c(\"label\", { staticClass: \"block cursor-pointer p-1 mt-1\" }, [\n              _vm._v(\"\\n      Start All Over\\n      \"),\n              _c(\"input\", {\n                attrs: { name: \"status[]\", type: \"radio\" },\n                on: {\n                  click: function($event) {\n                    return _vm.change_status($event)\n                  }\n                }\n              })\n            ]),\n            _c(\"label\", { staticClass: \"block cursor-pointer p-1 mt-1\" }, [\n              _vm._v(\n                \"\\n      Mimick server processing files status messages\\n      \"\n              ),\n              _c(\"input\", {\n                attrs: { type: \"checkbox\" },\n                on: { click: _vm.toggleGeneratingLoremIpsum }\n              })\n            ]),\n            _c(\"div\", {\n              staticClass: \"p-1 m-1 mt-12 border rounded bg-black text-white\",\n              domProps: { innerHTML: _vm._s(_vm.status) }\n            })\n          ]\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}